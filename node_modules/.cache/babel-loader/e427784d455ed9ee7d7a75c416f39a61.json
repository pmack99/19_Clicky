{"ast":null,"code":"import _classCallCheck from \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nfunction shuffleFriends(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      curScore: 0,\n      topScore: 0,\n      status: \"\",\n      clicked: false\n    };\n\n    _this.handleShuffle = function () {\n      var shuffled = shuffleFriends(friends);\n\n      _this.setState({\n        friends: shuffled\n      });\n    };\n\n    _this.chooseFriend = function (id) {\n      if (_this.state.clicked === false) {\n        _this.setState({\n          clicked: true\n        });\n\n        _this.handleIncrement();\n      } else {\n        _this.setState({\n          curScore: 0,\n          status: \"Play again\",\n          clicked: false,\n          friends: friends\n        });\n      }\n    };\n\n    _this.resetGame = function () {\n      _this.setState({\n        curScore: 0,\n        status: \"Play again\",\n        clicked: false,\n        friends: friends\n      });\n\n      _this.handleShuffle();\n    };\n\n    _this.handleIncrement = function () {\n      var score = _this.state.curScore + 1;\n\n      _this.render();\n\n      _this.setState({\n        curScore: score,\n        status: \"Correct\"\n      });\n\n      if (score >= _this.state.topScore) {\n        _this.setState({\n          topScore: score\n        });\n\n        _this.handleShuffle();\n\n        _this.render();\n      }\n\n      if (score >= 12) {\n        _this.setState({\n          status: \"You will sit on the IRON THRONE\",\n          topScore: 12,\n          clicked: []\n        });\n\n        if (score === 13) {\n          _this.resetGame();\n        }\n\n        ;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" Game of Thrones Clicky Game\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Current Score:  \", this.state.curScore, \"  |  Top Score: \", this.state.topScore), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" Your guess?  -  \", this.state.status)))), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          chooseFriend: _this2.chooseFriend,\n          handleIncrement: _this2.handleIncrement,\n          handleShuffle: _this2.handleShuffle,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/prestonmack/Google Drive/BootcampStuff/Homework/19_Clicky_GOT/19_Clicky/src/App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","shuffleFriends","array","i","length","j","Math","floor","random","App","state","curScore","topScore","status","clicked","handleShuffle","shuffled","setState","chooseFriend","id","handleIncrement","resetGame","score","render","map","friend","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nfunction shuffleFriends(array) {\n  for (let i = array.length -1; i > 0; i--) {\n       let j = Math.floor(Math.random() * (i +1));\n       [array[i], array[j]] = [array[j], array[i]];\n\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    curScore: 0,\n    topScore: 0,\n    status: \"\",\n    clicked: false,\n  };\n\n\n  handleShuffle = () =>{\n    let shuffled = shuffleFriends(friends);\n    this.setState({friends: shuffled});\n  }\n\n  chooseFriend = id => {\n    if (this.state.clicked === false){\n    this.setState({clicked: true});\n    this.handleIncrement();\n    } else {\n      this.setState({\n        curScore: 0,\n        status: \"Play again\",\n        clicked: false,\n        friends\n      })\n\n    }\n   };\n\n   resetGame =()=>{\n\n     this.setState({\n       curScore: 0,\n       status: \"Play again\",\n       clicked: false,\n       friends\n     })\n     this.handleShuffle();\n   }\n \n   handleIncrement = () =>{\n     const score = this.state.curScore +1;\n     this.render();\n     this.setState({\n       curScore: score,\n       status: \"Correct\"\n       \n    });\n    if (score >= this.state.topScore){\n      this.setState({ topScore: score});\n      this.handleShuffle();\n      this.render();\n    }\n    if (score >= 12){\n      this.setState({\n        status: \"You will sit on the IRON THRONE\",\n        topScore: 12,\n        clicked: []\n    });\n    if (score === 13){\n   this.resetGame();\n    };\n    }\n}\n   \n\n \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <div class=\"container\">\n        <div class=\"jumbotron\">\n        \n        <Title> Game of Thrones Clicky Game\n          <br></br>\n        <p>Current Score:  {this.state.curScore}  |  Top Score: {this.state.topScore}</p>\n        <p> Your guess?  -  {this.state.status}</p>\n        </Title> \n        </div>\n        </div>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            chooseFriend={this.chooseFriend}\n            handleIncrement={this.handleIncrement}\n            handleShuffle = {this.handleShuffle}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            \n          />\n          \n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}